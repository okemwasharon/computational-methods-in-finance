# Load necessary libraries
library(ggplot2)
library(tidyr)
library(dplyr)

# Set parameters
kappa <- 0.5
v0 <- 0.1
v_bar <- 0.1
T <- 1
sigma <- 0.1
N <- 10000  # Number of paths
dt <- 0.01  # Time step
steps <- T / dt

# Function to simulate CIR model
simulate_CIR <- function() {
  v <- numeric(steps + 1)
  v[1] <- v0
  for (i in 2:(steps + 1)) {
    dW <- rnorm(1, mean = 0, sd = sqrt(dt))
    dv <- kappa * (v_bar - v[i-1]) * dt + sigma * sqrt(max(v[i-1], 0)) * dW
    v[i] <- max(v[i-1] + dv, 0)  # Ensure non-negativity
  }
  return(v[steps + 1])
}

# Function to simulate Vasicek model
simulate_Vasicek <- function() {
  v <- numeric(steps + 1)
  v[1] <- v0
  for (i in 2:(steps + 1)) {
    dW <- rnorm(1, mean = 0, sd = sqrt(dt))
    dv <- kappa * (v_bar - v[i-1]) * dt + sigma * dW
    v[i] <- v[i-1] + dv
  }
  return(v[steps + 1])
}

# Simulate paths
set.seed(123)  # For reproducibility
CIR_paths <- replicate(N, simulate_CIR())
Vasicek_paths <- replicate(N, simulate_Vasicek())

# Create a data frame for plotting
df <- data.frame(
  CIR = CIR_paths,
  Vasicek = Vasicek_paths
) %>%
  pivot_longer(cols = everything(), names_to = "Model", values_to = "Value")

# Plot PDFs
ggplot(df, aes(x = Value, fill = Model)) +
  geom_density(alpha = 0.5) +
  labs(title = "PDF Comparison: CIR vs Vasicek Model",
       x = "Value at T = 1",
       y = "Density") +
  theme_minimal() +
  scale_fill_brewer(palette = "Set1")

# Print summary statistics
summary_stats <- df %>%
  group_by(Model) %>%
  summarize(
    Mean = mean(Value),
    SD = sd(Value),
    Min = min(Value),
    Max = max(Value)
  )

print(summary_stats)
